/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.wquintal.yvan.lab1;

import ca.wquintal.lib.FileUtils;
import java.awt.event.WindowAdapter;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author wq
 */
public class GestionFichierJDialog extends javax.swing.JDialog {

        private String m_Username;
        private FileUtils m_FileUtils;
	
	
	private String[] columnNames = {
		"Type",
		"Name",
		"Size"
	};
	
    /**
     * Creates new form GestionFichierJDialog
     */
    public GestionFichierJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        m_FileUtils = new FileUtils();
	// set le rootdirectory
	txtRootDirectory.setText(m_FileUtils.getmRootDirectory());

	tableFiles.setCellSelectionEnabled(true);
	ListSelectionModel cellSelectionModel = tableFiles.getSelectionModel();
	cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
	
	cellSelectionModel.addListSelectionListener((ListSelectionEvent e) -> {
		System.out.print("lol");
	});
	
	
	

	
	FillTable();
    }
    
    public GestionFichierJDialog(java.awt.Frame parent, boolean modal, String username) {
	    this(parent,modal);
	    m_Username = username;
	    // Set le titre de la bar
	    this.setTitle("Gestion de fichiers de "+username);
	    
    }
    
    // Fill the table for the current workspace
    private void FillTable() {
	    TableModel model = tableFiles.getModel();
	    File[] files = m_FileUtils.GetFilesWorkspace();
	    List<Object[]> data = new ArrayList<Object[]>();
	    int i = 0;
	    for(File f : files) {
		    // Pour chaqu'un des files ajout ca dans la table
		    String type = "f";
		    if(f.isDirectory())
			type = "d";
		    Object[] o = new Object[] { false, type, f.getName() };
		    model.setValueAt(false, i, 0);
		    model.setValueAt(type, i, 1);
		    model.setValueAt(f.getName(), i, 2);
		    i++;
	    }
	    
	    
    }

    private String[] GetSelectedFiles() {
	    // get toute les nom de fichier qui sont checker
	    List<String> list = new ArrayList<String>();
	    TableModel model = tableFiles.getModel();
	    for(int i=0;i<model.getRowCount();i++) {
		Boolean ischeck = (Boolean)model.getValueAt(i, 0);
		if(ischeck) {
			list.add((String)model.getValueAt(i, 2));
		}
	}
	return list.toArray(new String[0]);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jToolBar1 = new javax.swing.JToolBar();
                txtRootDirectory = new javax.swing.JTextField();
                jLabel1 = new javax.swing.JLabel();
                btnRm = new javax.swing.JButton();
                btnTouch = new javax.swing.JButton();
                btnCp = new javax.swing.JButton();
                jScrollPane2 = new javax.swing.JScrollPane();
                tableFiles = new javax.swing.JTable();
                btnMV = new javax.swing.JButton();
                btnCD = new javax.swing.JButton();
                btnCAT = new javax.swing.JButton();

                jToolBar1.setRollover(true);

                setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

                txtRootDirectory.setText("jTextField1");

                jLabel1.setText("ROOT");

                btnRm.setText("RM");
                btnRm.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseReleased(java.awt.event.MouseEvent evt) {
                                btnRmMouseReleased(evt);
                        }
                });
                btnRm.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnRmActionPerformed(evt);
                        }
                });

                btnTouch.setText("Touch");
                btnTouch.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseReleased(java.awt.event.MouseEvent evt) {
                                btnTouchMouseReleased(evt);
                        }
                });

                btnCp.setText("CP");
                btnCp.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseReleased(java.awt.event.MouseEvent evt) {
                                btnCpMouseReleased(evt);
                        }
                });

                tableFiles.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null},
                                {null, null, null},
                                {null, null, null},
                                {null, null, null},
                                {null, null, null},
                                {null, null, null},
                                {null, null, null},
                                {null, null, null},
                                {null, null, null},
                                {null, null, null},
                                {null, null, null},
                                {null, null, null},
                                {null, null, null}
                        },
                        new String [] {
                                "Select", "Type", "Name"
                        }
                ) {
                        Class[] types = new Class [] {
                                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
                        };
                        boolean[] canEdit = new boolean [] {
                                true, false, true
                        };

                        public Class getColumnClass(int columnIndex) {
                                return types [columnIndex];
                        }

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                        }
                });
                jScrollPane2.setViewportView(tableFiles);
                if (tableFiles.getColumnModel().getColumnCount() > 0) {
                        tableFiles.getColumnModel().getColumn(0).setResizable(false);
                        tableFiles.getColumnModel().getColumn(1).setResizable(false);
                }

                btnMV.setText("MV");
                btnMV.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseReleased(java.awt.event.MouseEvent evt) {
                                btnMVMouseReleased(evt);
                        }
                });

                btnCD.setText("CD");
                btnCD.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseReleased(java.awt.event.MouseEvent evt) {
                                btnCDMouseReleased(evt);
                        }
                });

                btnCAT.setText("CAT");
                btnCAT.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseReleased(java.awt.event.MouseEvent evt) {
                                btnCATMouseReleased(evt);
                        }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtRootDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnCD)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(btnTouch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btnCp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btnMV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btnRm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btnCAT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(52, 52, 52))))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtRootDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1)
                                        .addComponent(btnCD))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnRm)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnTouch)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnCp)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnMV)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnCAT))
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(34, Short.MAX_VALUE))
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void btnRmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRmActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_btnRmActionPerformed

        private void btnCDMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCDMouseReleased
	String root = txtRootDirectory.getText();
	    if(!FileUtils.IsDirectoryValid(root)) {
		// Afficher un message d'erreur disans qu'il est pas bon le root
		return;
	    }
	    m_FileUtils.setmRootDirectory(root);
	    FillTable();
        }//GEN-LAST:event_btnCDMouseReleased

        private void btnRmMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRmMouseReleased
		String[] files = GetSelectedFiles();
		System.out.print(Arrays.toString(files));
		
		
        }//GEN-LAST:event_btnRmMouseReleased

        private void btnTouchMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTouchMouseReleased
                // Demande pour le nom du fichier a creer
		String fileName = JOptionPane.showInputDialog(this,"Nom du fichier à crée ?");
		if(m_FileUtils.CreateNewFile(fileName, false)==null) {
			System.out.print("Error creating file "+fileName);
		}
		FillTable();
        }//GEN-LAST:event_btnTouchMouseReleased

        private void btnCpMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCpMouseReleased
                // TODO add your handling code here:
		String directoryName = JOptionPane.showInputDialog(this,"Nom de répertoire a copier les fichiers ?");
		String[] files = GetSelectedFiles();
		for(String f : files) {
			if(!m_FileUtils.Cp(f, directoryName)) {
				System.out.print("Could not copy to "+directoryName);
				return;
			}
		}
        }//GEN-LAST:event_btnCpMouseReleased

        private void btnMVMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMVMouseReleased
                // TODO add your handling code here:
        }//GEN-LAST:event_btnMVMouseReleased

        private void btnCATMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCATMouseReleased
                // TODO add your handling code here:
        }//GEN-LAST:event_btnCATMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionFichierJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionFichierJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionFichierJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionFichierJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GestionFichierJDialog dialog = new GestionFichierJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnCAT;
        private javax.swing.JButton btnCD;
        private javax.swing.JButton btnCp;
        private javax.swing.JButton btnMV;
        private javax.swing.JButton btnRm;
        private javax.swing.JButton btnTouch;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JScrollPane jScrollPane2;
        private javax.swing.JToolBar jToolBar1;
        private javax.swing.JTable tableFiles;
        private javax.swing.JTextField txtRootDirectory;
        // End of variables declaration//GEN-END:variables
}
